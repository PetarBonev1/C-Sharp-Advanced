using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

class Program
{
    static void Main(string[] args)
    {


        int n = int.Parse(Console.ReadLine());
        int rows = n;
        int cols = n;
        double[][] matrix = new double[n][];


        for (int row = 0; row < rows; row++)
        {
            int[] rowInput = Console.ReadLine().Split(" ").Select(int.Parse).ToArray();
            matrix[row] = new double[rowInput.Length];

            for (int col = 0; col < rowInput.Length; col++)
            {
                matrix[row][col] = rowInput[col];
            }
        }

        for (int row = 0; row < rows - 1; row++)
        {
            int currentRowLength = matrix[row].Length;
            int nextRowLength = matrix[row + 1].Length;

            if (currentRowLength == nextRowLength)
            {
                for (int j = 0; j < currentRowLength; j++)
                {
                    matrix[row][j] *= 2;
                    matrix[row + 1][j] *= 2;
                }
            }
            else
            {
                for (int j = 0; j < currentRowLength; j++)
                {
                    matrix[row][j] /= 2;
                }

                for (int j = 0; j < nextRowLength; j++)
                {
                    matrix[row + 1][j] /= 2;
                }
            }
        }

        string command = Console.ReadLine();
        while (command != "End")
        {
            string[] commandInfo = command.Split(" ");
            if (commandInfo[0] == "Add")
            {
                int row = int.Parse(commandInfo[1]);
                int col = int.Parse(commandInfo[2]);
                int value = int.Parse(commandInfo[3]);
                if (row < 0 || row > matrix.Length - 1 || col < 0 || col > cols)
                {

                }
                else
                {
                    matrix[row][col] += value;
                }
            }
            else if (commandInfo[0] == "Subtract")
            {
                int row = int.Parse(commandInfo[1]);
                int col = int.Parse(commandInfo[2]);
                int value = int.Parse(commandInfo[3]);
                if (row < 0 || row > matrix.Length || col < 0 || col > cols)
                {

                }
                else
                {
                    matrix[row][col] -= value;
                }

            }
            command = Console.ReadLine();
        }

        for (int row = 0; row < matrix.Length; row++)
        {
            Console.WriteLine($"{string.Join(" ", matrix[row])}");
        }











    }

}